{"version":3,"file":"static/js/1141.092df64d.chunk.js","mappings":"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","sources":["components/container/PageContainer.tsx","components/shared/BlankCard.tsx","layouts/full/shared/breadcrumb/Breadcrumb.tsx","views/apps/calendar/EventData.ts","views/apps/calendar/BigCalendar.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport { Helmet } from 'react-helmet';\r\n\r\ntype Props = {\r\n  description?: string;\r\n  children: JSX.Element | JSX.Element[];\r\n  title?: string;\r\n};\r\n\r\nconst PageContainer = ({ title, description, children }: Props) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default PageContainer;\r\n","import { Card } from '@mui/material';\r\nimport React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { AppState, useSelector } from 'src/store/Store';\r\n\r\ntype Props = {\r\n  className?: string;\r\n  children: JSX.Element | JSX.Element[];\r\n  sx?: any;\r\n};\r\n\r\nconst BlankCard = ({ children, className, sx }: Props) => {\r\n  const customizer = useSelector((state: AppState) => state.customizer);\r\n\r\n  const theme = useTheme();\r\n  const borderColor = theme.palette.divider;\r\n\r\n  return (\r\n    <Card\r\n      sx={{ p: 0, border: !customizer.isCardShadow ? `1px solid ${borderColor}` : 'none' , position: 'relative', sx }}\r\n      className={className}\r\n      elevation={customizer.isCardShadow ? 9 : 0}\r\n      variant={!customizer.isCardShadow ? 'outlined' : undefined}\r\n    >\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BlankCard;\r\n","import React from 'react';\r\nimport { Grid, Typography, Box, Breadcrumbs, Link, Theme } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport breadcrumbImg from 'src/assets/images/breadcrumb/ChatBc.png';\r\nimport { IconCircle } from '@tabler/icons';\r\n\r\ninterface BreadCrumbType {\r\n  subtitle?: string;\r\n  items?: any[];\r\n  title: string;\r\n  children?: JSX.Element;\r\n}\r\n\r\nconst Breadcrumb = ({ subtitle, items, title, children }: BreadCrumbType) => (\r\n  <Grid\r\n    container\r\n    sx={{\r\n      backgroundColor: 'primary.light',\r\n      borderRadius: (theme: Theme) => theme.shape.borderRadius / 4,\r\n      p: '30px 25px 20px',\r\n      marginBottom: '30px',\r\n      position: 'relative',\r\n      overflow: 'hidden',\r\n    }}\r\n  >\r\n    <Grid item xs={12} sm={6} lg={8} mb={1}>\r\n      <Typography variant=\"h4\">{title}</Typography>\r\n      <Typography color=\"textSecondary\" variant=\"h6\" fontWeight={400} mt={0.8} mb={0}>\r\n        {subtitle}\r\n      </Typography>\r\n      <Breadcrumbs\r\n        separator={\r\n          <IconCircle\r\n            size=\"5\"\r\n            fill=\"textSecondary\"\r\n            fillOpacity={'0.6'}\r\n            style={{ margin: '0 5px' }}\r\n          />\r\n        }\r\n        sx={{ alignItems: 'center', mt: items ? '10px' : '' }}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        {items\r\n          ? items.map((item) => (\r\n              <div key={item.title}>\r\n                {item.to ? (\r\n                  <Link underline=\"none\" color=\"inherit\" component={NavLink} to={item.to}>\r\n                    {item.title}\r\n                  </Link>\r\n                ) : (\r\n                  <Typography color=\"textPrimary\">{item.title}</Typography>\r\n                )}\r\n              </div>\r\n            ))\r\n          : ''}\r\n      </Breadcrumbs>\r\n    </Grid>\r\n    <Grid item xs={12} sm={6} lg={4} display=\"flex\" alignItems=\"flex-end\">\r\n      <Box\r\n        sx={{\r\n          display: { xs: 'none', md: 'block', lg: 'flex' },\r\n          alignItems: 'center',\r\n          justifyContent: 'flex-end',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {children ? (\r\n          <Box sx={{ top: '0px', position: 'absolute' }}>{children}</Box>\r\n        ) : (\r\n          <>\r\n            <Box sx={{ top: '0px', position: 'absolute' }}>\r\n              <img src={breadcrumbImg} alt={breadcrumbImg} width={'165px'} />\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default Breadcrumb;\r\n","const today = new Date();\r\nconst y = today.getFullYear();\r\nconst m = today.getMonth();\r\nconst d = today.getDate();\r\n\r\nexport interface EventType {\r\n  title?: string;\r\n  allDay?: boolean;\r\n  start?: Date;\r\n  end?: Date;\r\n  color?: string;\r\n}\r\n\r\nconst Events: EventType[] = [\r\n  {\r\n    title: 'Twice event For two Days',\r\n    allDay: true,\r\n    start: new Date(y, m, 3),\r\n    end: new Date(y, m, 5),\r\n    color: 'default',\r\n  },\r\n  {\r\n    title: 'Learn ReactJs',\r\n    start: new Date(y, m, d + 3, 10, 30),\r\n    end: new Date(y, m, d + 3, 11, 30),\r\n    allDay: false,\r\n    color: 'green',\r\n  },\r\n  {\r\n    title: 'Launching MaterialArt Angular',\r\n    start: new Date(y, m, d + 7, 12, 0),\r\n    end: new Date(y, m, d + 7, 14, 0),\r\n    allDay: false,\r\n    color: 'red',\r\n  },\r\n  {\r\n    title: 'Lunch with Mr.Raw',\r\n    start: new Date(y, m, d - 2),\r\n    end: new Date(y, m, d - 2),\r\n    allDay: true,\r\n    color: 'azure',\r\n  },\r\n  {\r\n    title: 'Going For Party of Sahs',\r\n    start: new Date(y, m, d + 1, 19, 0),\r\n    end: new Date(y, m, d + 1, 22, 30),\r\n    allDay: false,\r\n    color: 'azure',\r\n  },\r\n  {\r\n    title: 'Learn Ionic',\r\n    start: new Date(y, m, 23),\r\n    end: new Date(y, m, 25),\r\n    color: 'warning',\r\n  },\r\n  {\r\n    title: 'Research of making own Browser',\r\n    start: new Date(y, m, 19),\r\n    end: new Date(y, m, 22),\r\n    color: 'default',\r\n  },\r\n];\r\n\r\nexport default Events;\r\n","import React from 'react';\r\nimport {\r\n  CardContent,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Fab,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport moment from 'moment';\r\nimport Events from './EventData';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport './Calendar.css';\r\nimport PageContainer from 'src/components/container/PageContainer';\r\nimport Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';\r\nimport { IconCheck } from '@tabler/icons';\r\nimport BlankCard from 'src/components/shared/BlankCard';\r\n\r\nmoment.locale('en-GB');\r\nconst localizer = momentLocalizer(moment);\r\n\r\ntype EvType = {\r\n  title: string;\r\n  allDay?: boolean;\r\n  start?: Date;\r\n  end?: Date;\r\n  color?: string;\r\n};\r\n\r\ninterface colorType {\r\n  id: number;\r\n  eColor: string;\r\n  value: string;\r\n}\r\n\r\nconst BigCalendar = () => {\r\n  const [calevents, setCalEvents] = React.useState<any>(Events);\r\n  const [open, setOpen] = React.useState<boolean>(false);\r\n  const [title, setTitle] = React.useState<string>('');\r\n  const [slot, setSlot] = React.useState<EvType>();\r\n  const [start, setStart] = React.useState<any | null>();\r\n  const [end, setEnd] = React.useState<any | null>();\r\n  const [color, setColor] = React.useState<string>('default');\r\n  const [update, setUpdate] = React.useState<EvType | undefined | any>();\r\n\r\n  const ColorVariation: colorType[] = [\r\n    {\r\n      id: 1,\r\n      eColor: '#1a97f5',\r\n      value: 'default',\r\n    },\r\n    {\r\n      id: 2,\r\n      eColor: '#39b69a',\r\n      value: 'green',\r\n    },\r\n    {\r\n      id: 3,\r\n      eColor: '#fc4b6c',\r\n      value: 'red',\r\n    },\r\n    {\r\n      id: 4,\r\n      eColor: '#615dff',\r\n      value: 'azure',\r\n    },\r\n    {\r\n      id: 5,\r\n      eColor: '#fdd43f',\r\n      value: 'warning',\r\n    },\r\n  ];\r\n  const addNewEventAlert = (slotInfo: EvType) => {\r\n    setOpen(true);\r\n    setSlot(slotInfo);\r\n    setStart(slotInfo.start);\r\n    setEnd(slotInfo.end);\r\n  };\r\n\r\n  const editEvent = (event: any) => {\r\n    setOpen(true);\r\n    const newEditEvent = calevents.find((elem: EvType) => elem.title === event.title);\r\n    setColor(event.color);\r\n    setTitle(newEditEvent.title);\r\n    setColor(newEditEvent.color);\r\n    setStart(newEditEvent.start);\r\n    setEnd(newEditEvent.end);\r\n    setUpdate(event);\r\n  };\r\n\r\n  const updateEvent = (e: any) => {\r\n    e.preventDefault();\r\n    setCalEvents(\r\n      calevents.map((elem: EvType) => {\r\n        if (elem.title === update.title) {\r\n          return { ...elem, title, start, end, color };\r\n        }\r\n\r\n        return elem;\r\n      }),\r\n    );\r\n    setOpen(false);\r\n    setTitle('');\r\n    setColor('');\r\n    setStart('');\r\n    setEnd('');\r\n    setUpdate(null);\r\n  };\r\n  const inputChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => setTitle(e.target.value);\r\n  const selectinputChangeHandler = (id: string) => setColor(id);\r\n\r\n  const submitHandler = (e: React.ChangeEvent<any>) => {\r\n    e.preventDefault();\r\n    const newEvents = calevents;\r\n    newEvents.push({\r\n      title,\r\n      start,\r\n      end,\r\n      color,\r\n    });\r\n    setOpen(false);\r\n    e.target.reset();\r\n    setCalEvents(newEvents);\r\n    setTitle('');\r\n    setStart(new Date());\r\n    setEnd(new Date());\r\n  };\r\n  const deleteHandler = (event: EvType) => {\r\n    const updatecalEvents = calevents.filter((ind: EvType) => ind.title !== event.title);\r\n    setCalEvents(updatecalEvents);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    // eslint-disable-line newline-before-return\r\n    setOpen(false);\r\n    setTitle('');\r\n    setStart(new Date());\r\n    setEnd(new Date());\r\n    setUpdate(null);\r\n  };\r\n\r\n  const eventColors = (event: EvType) => {\r\n    if (event.color) {\r\n      return { className: `event-${event.color}` };\r\n    }\r\n\r\n    return { className: `event-default` };\r\n  };\r\n\r\n  const handleStartChange = (newValue: any) => {\r\n    setStart(newValue);\r\n  };\r\n  const handleEndChange = (newValue: any) => {\r\n    setEnd(newValue);\r\n  };\r\n\r\n  return (\r\n    <PageContainer title=\"Calendar ui\" description=\"this is Calendar page\">\r\n      <Breadcrumb title=\"Calendar\" subtitle=\"App\" />\r\n      <BlankCard>\r\n        {/* ------------------------------------------- */}\r\n        {/* Calendar */}\r\n        {/* ------------------------------------------- */}\r\n        <CardContent>\r\n          <Calendar\r\n            selectable\r\n            events={calevents}\r\n            defaultView=\"month\"\r\n            scrollToTime={new Date(1970, 1, 1, 6)}\r\n            defaultDate={new Date()}\r\n            localizer={localizer}\r\n            style={{ height: 'calc(100vh - 350px' }}\r\n            onSelectEvent={(event) => editEvent(event)}\r\n            onSelectSlot={(slotInfo: any) => addNewEventAlert(slotInfo)}\r\n            eventPropGetter={(event: any) => eventColors(event)}\r\n          />\r\n        </CardContent>\r\n      </BlankCard>\r\n      {/* ------------------------------------------- */}\r\n      {/* Add Calendar Event Dialog */}\r\n      {/* ------------------------------------------- */}\r\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"xs\">\r\n        <form onSubmit={update ? updateEvent : submitHandler}>\r\n          <DialogContent>\r\n            {/* ------------------------------------------- */}\r\n            {/* Add Edit title */}\r\n            {/* ------------------------------------------- */}\r\n            <Typography variant=\"h4\" sx={{ mb: 2 }}>\r\n              {update ? 'Update Event' : 'Add Event'}\r\n            </Typography>\r\n            <Typography mb={3} variant=\"subtitle2\">\r\n              {!update\r\n                ? 'To add Event kindly fillup the title and choose the event color and press the add button'\r\n                : 'To Edit/Update Event kindly change the title and choose the event color and press the update button'}\r\n              {slot?.title}\r\n            </Typography>\r\n\r\n            <TextField\r\n              id=\"Event Title\"\r\n              placeholder=\"Enter Event Title\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Event Title\"\r\n              value={title}\r\n              sx={{ mb: 3 }}\r\n              onChange={inputChangeHandler}\r\n            />\r\n            {/* ------------------------------------------- */}\r\n            {/* Selection of Start and end date */}\r\n            {/* ------------------------------------------- */}\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DatePicker\r\n                label=\"Start Date\"\r\n                inputFormat=\"MM/dd/yyyy\"\r\n                value={start}\r\n                onChange={handleStartChange}\r\n                renderInput={(params: any) => <TextField {...params} fullWidth sx={{ mb: 3 }} />}\r\n              />\r\n              <DatePicker\r\n                label=\"End Date\"\r\n                inputFormat=\"MM/dd/yyyy\"\r\n                value={end}\r\n                onChange={handleEndChange}\r\n                renderInput={(params: any) => (\r\n                  <TextField\r\n                    {...params}\r\n                    fullWidth\r\n                    sx={{ mb: 3 }}\r\n                    error={start > end}\r\n                    helperText={start > end ? 'End date must be later than start date' : ''}\r\n                  />\r\n                )}\r\n              />\r\n            </LocalizationProvider>\r\n\r\n            {/* ------------------------------------------- */}\r\n            {/* Calendar Event Color*/}\r\n            {/* ------------------------------------------- */}\r\n            <Typography variant=\"h6\" fontWeight={600} my={2}>\r\n              Select Event Color\r\n            </Typography>\r\n            {/* ------------------------------------------- */}\r\n            {/* colors for event */}\r\n            {/* ------------------------------------------- */}\r\n            {ColorVariation.map((mcolor) => {\r\n              return (\r\n                <Fab\r\n                  color=\"primary\"\r\n                  style={{ backgroundColor: mcolor.eColor }}\r\n                  sx={{\r\n                    marginRight: '3px',\r\n                    transition: '0.1s ease-in',\r\n                    scale: mcolor.value === color ? '0.9' : '0.7',\r\n                  }}\r\n                  size=\"small\"\r\n                  key={mcolor.id}\r\n                  onClick={() => selectinputChangeHandler(mcolor.value)}\r\n                >\r\n                  {mcolor.value === color ? <IconCheck width={16} /> : ''}\r\n                </Fab>\r\n              );\r\n            })}\r\n          </DialogContent>\r\n          {/* ------------------------------------------- */}\r\n          {/* Action for dialog */}\r\n          {/* ------------------------------------------- */}\r\n          <DialogActions sx={{ p: 3 }}>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n\r\n            {update ? (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"error\"\r\n                variant=\"contained\"\r\n                onClick={() => deleteHandler(update)}\r\n              >\r\n                Delete\r\n              </Button>\r\n            ) : (\r\n              ''\r\n            )}\r\n            <Button type=\"submit\" disabled={!title} variant=\"contained\">\r\n              {update ? 'Update Event' : 'Add Event'}\r\n            </Button>\r\n          </DialogActions>\r\n          {/* ------------------------------------------- */}\r\n          {/* End Calendar */}\r\n          {/* ------------------------------------------- */}\r\n        </form>\r\n      </Dialog>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default BigCalendar;\r\n"],"names":["title","description","children","name","content","className","sx","customizer","useSelector","state","borderColor","useTheme","palette","divider","p","border","isCardShadow","position","elevation","variant","undefined","subtitle","items","Grid","container","backgroundColor","borderRadius","theme","shape","marginBottom","overflow","item","xs","sm","lg","mb","Typography","color","fontWeight","mt","Breadcrumbs","separator","size","fill","fillOpacity","style","margin","alignItems","map","to","Link","underline","component","NavLink","display","Box","md","justifyContent","width","top","src","breadcrumbImg","alt","today","Date","y","getFullYear","m","getMonth","d","getDate","allDay","start","end","moment","localizer","momentLocalizer","React","Events","calevents","setCalEvents","open","setOpen","setTitle","slot","setSlot","setStart","setEnd","setColor","update","setUpdate","handleClose","PageContainer","Breadcrumb","BlankCard","CardContent","selectable","events","defaultView","scrollToTime","defaultDate","height","onSelectEvent","event","newEditEvent","find","elem","editEvent","onSelectSlot","slotInfo","addNewEventAlert","eventPropGetter","eventColors","Dialog","onClose","fullWidth","maxWidth","onSubmit","e","preventDefault","newEvents","push","target","reset","DialogContent","TextField","id","placeholder","label","value","onChange","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","inputFormat","newValue","renderInput","params","error","helperText","my","eColor","mcolor","Fab","marginRight","transition","scale","onClick","DialogActions","Button","type","updatecalEvents","filter","ind","deleteHandler","disabled"],"sourceRoot":""}
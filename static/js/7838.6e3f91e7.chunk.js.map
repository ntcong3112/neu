{"version":3,"file":"static/js/7838.6e3f91e7.chunk.js","mappings":"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","sources":["components/container/PageContainer.tsx","components/forms/theme-elements/CustomSelect.tsx","components/forms/theme-elements/CustomSwitch.tsx","components/forms/theme-elements/CustomTextField.tsx","components/shared/ChildCard.tsx","components/shared/ParentCard.tsx","layouts/full/shared/breadcrumb/Breadcrumb.tsx","components/material-ui/dialog/SimpleDialog.tsx","components/material-ui/dialog/AlertDialog.tsx","components/material-ui/dialog/TransitionDialog.tsx","components/material-ui/dialog/FormDialog.tsx","components/material-ui/dialog/FullscreenDialog.tsx","components/material-ui/dialog/MaxWidthDialog.tsx","components/material-ui/dialog/ScrollContentDialog.tsx","components/material-ui/dialog/ResponsiveDialog.tsx","views/ui-components/MuiDialog.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport { Helmet } from 'react-helmet';\r\n\r\ntype Props = {\r\n  description?: string;\r\n  children: JSX.Element | JSX.Element[];\r\n  title?: string;\r\n};\r\n\r\nconst PageContainer = ({ title, description, children }: Props) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Select } from '@mui/material';\r\n\r\nconst CustomSelect = styled((props: any) => <Select {...props} />)(({}) => ({}));\r\n\r\nexport default CustomSelect;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Switch } from '@mui/material';\r\n\r\nconst CustomSwitch = styled((props: any) => <Switch {...props} />)(({ theme }) => ({\r\n  '&.MuiSwitch-root': {\r\n    width: '68px',\r\n    height: '49px',\r\n  },\r\n  '&  .MuiButtonBase-root': {\r\n    top: '6px',\r\n    left: '6px',\r\n  },\r\n  '&  .MuiButtonBase-root.Mui-checked .MuiSwitch-thumb': {\r\n    backgroundColor: 'primary.main',\r\n  },\r\n  '& .MuiSwitch-thumb': {\r\n    width: '18px',\r\n    height: '18px',\r\n    borderRadius: '6px',\r\n  },\r\n\r\n  '& .MuiSwitch-track': {\r\n    backgroundColor: theme.palette.grey[200],\r\n    opacity: 1,\r\n    borderRadius: '5px',\r\n  },\r\n  '& .MuiSwitch-switchBase': {\r\n    '&.Mui-checked': {\r\n      '& + .MuiSwitch-track': {\r\n        backgroundColor: 'primary',\r\n        opacity: 0.18,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default CustomSwitch;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst CustomTextField = styled((props: any) => <TextField {...props} />)(({ theme }) => ({\r\n  '& .MuiOutlinedInput-input::-webkit-input-placeholder': {\r\n    color: theme.palette.text.secondary,\r\n    opacity: '0.8',\r\n  },\r\n  '& .MuiOutlinedInput-input.Mui-disabled::-webkit-input-placeholder': {\r\n    color: theme.palette.text.secondary,\r\n    opacity: '1',\r\n  },\r\n  '& .Mui-disabled .MuiOutlinedInput-notchedOutline': {\r\n    borderColor: theme.palette.grey[200],\r\n  },\r\n}));\r\n\r\nexport default CustomTextField;\r\n","import React from 'react';\r\n\r\nimport { Card, CardHeader, CardContent, Divider } from '@mui/material';\r\n\r\ntype Props = {\r\n  title?: string;\r\n  children: JSX.Element | JSX.Element[];\r\n};\r\n\r\nconst ChildCard = ({ title, children }: Props) => (\r\n  <Card sx={{ padding: 0, borderColor: (theme: any) => theme.palette.divider }} variant=\"outlined\">\r\n    {title ? (\r\n      <>\r\n        <CardHeader title={title} />\r\n        <Divider />{' '}\r\n      </>\r\n    ) : (\r\n      ''\r\n    )}\r\n\r\n    <CardContent>{children}</CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default ChildCard;\r\n","import React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardHeader, CardContent, Divider, Box } from '@mui/material';\r\nimport { useSelector } from 'src/store/Store';\r\nimport { AppState } from 'src/store/Store';\r\n\r\ntype Props = {\r\n  title: string;\r\n  footer?: string | JSX.Element;\r\n  children: JSX.Element;\r\n};\r\n\r\nconst ParentCard = ({ title, children, footer }: Props) => {\r\n  const customizer = useSelector((state: AppState) => state.customizer);\r\n\r\n  const theme = useTheme();\r\n  const borderColor = theme.palette.divider;\r\n\r\n  return (\r\n    <Card\r\n      sx={{ padding: 0, border: !customizer.isCardShadow ? `1px solid ${borderColor}` : 'none' }}\r\n      elevation={customizer.isCardShadow ? 9 : 0}\r\n      variant={!customizer.isCardShadow ? 'outlined' : undefined}\r\n    >\r\n      <CardHeader title={title} />\r\n      <Divider />\r\n\r\n      <CardContent>{children}</CardContent>\r\n      {footer ? (\r\n        <>\r\n          <Divider />\r\n          <Box p={3}>{footer}</Box>\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ParentCard;\r\n","import React from 'react';\r\nimport { Grid, Typography, Box, Breadcrumbs, Link, Theme } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport breadcrumbImg from 'src/assets/images/breadcrumb/ChatBc.png';\r\nimport { IconCircle } from '@tabler/icons';\r\n\r\ninterface BreadCrumbType {\r\n  subtitle?: string;\r\n  items?: any[];\r\n  title: string;\r\n  children?: JSX.Element;\r\n}\r\n\r\nconst Breadcrumb = ({ subtitle, items, title, children }: BreadCrumbType) => (\r\n  <Grid\r\n    container\r\n    sx={{\r\n      backgroundColor: 'primary.light',\r\n      borderRadius: (theme: Theme) => theme.shape.borderRadius / 4,\r\n      p: '30px 25px 20px',\r\n      marginBottom: '30px',\r\n      position: 'relative',\r\n      overflow: 'hidden',\r\n    }}\r\n  >\r\n    <Grid item xs={12} sm={6} lg={8} mb={1}>\r\n      <Typography variant=\"h4\">{title}</Typography>\r\n      <Typography color=\"textSecondary\" variant=\"h6\" fontWeight={400} mt={0.8} mb={0}>\r\n        {subtitle}\r\n      </Typography>\r\n      <Breadcrumbs\r\n        separator={\r\n          <IconCircle\r\n            size=\"5\"\r\n            fill=\"textSecondary\"\r\n            fillOpacity={'0.6'}\r\n            style={{ margin: '0 5px' }}\r\n          />\r\n        }\r\n        sx={{ alignItems: 'center', mt: items ? '10px' : '' }}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        {items\r\n          ? items.map((item) => (\r\n              <div key={item.title}>\r\n                {item.to ? (\r\n                  <Link underline=\"none\" color=\"inherit\" component={NavLink} to={item.to}>\r\n                    {item.title}\r\n                  </Link>\r\n                ) : (\r\n                  <Typography color=\"textPrimary\">{item.title}</Typography>\r\n                )}\r\n              </div>\r\n            ))\r\n          : ''}\r\n      </Breadcrumbs>\r\n    </Grid>\r\n    <Grid item xs={12} sm={6} lg={4} display=\"flex\" alignItems=\"flex-end\">\r\n      <Box\r\n        sx={{\r\n          display: { xs: 'none', md: 'block', lg: 'flex' },\r\n          alignItems: 'center',\r\n          justifyContent: 'flex-end',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {children ? (\r\n          <Box sx={{ top: '0px', position: 'absolute' }}>{children}</Box>\r\n        ) : (\r\n          <>\r\n            <Box sx={{ top: '0px', position: 'absolute' }}>\r\n              <img src={breadcrumbImg} alt={breadcrumbImg} width={'165px'} />\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default Breadcrumb;\r\n","import React from 'react';\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n} from '@mui/material';\r\n\r\nimport { IconUser, IconPlus } from '@tabler/icons';\r\n\r\nconst emails = ['JohnDeo@gmail.com', 'SmithRocky@gmail.com'];\r\n\r\nconst SimpleDialog = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value: string) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleClickOpen}>\r\n        Open Simple Dialog\r\n      </Button>\r\n      <Typography variant=\"subtitle1\" component=\"div\" mb={1} textAlign=\"center\">\r\n        Selected: {selectedValue}\r\n      </Typography>\r\n      <Dialog onClose={() => handleClose(selectedValue)} open={open}>\r\n        <DialogTitle>Set backup account</DialogTitle>\r\n        <List sx={{ pt: 0 }}>\r\n          {emails.map((email) => (\r\n            <ListItem button onClick={() => handleClose(email)} key={email}>\r\n              <ListItemAvatar>\r\n                <Avatar sx={{ bgcolor: 'primary.light', color: 'primary.main' }}>\r\n                  <IconUser width={20} height={20} />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={email} />\r\n            </ListItem>\r\n          ))}\r\n\r\n          <ListItem autoFocus button onClick={() => handleClose('addAccount')}>\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <IconPlus width={20} height={20} />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Add account\" />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SimpleDialog;\r\n","import React from 'react';\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@mui/material';\r\n\r\nconst AlertDialog = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"secondary\" fullWidth onClick={handleClickOpen}>\r\n                Open Alert Dialog\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Use Google's location service?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Let Google help apps determine location. This means sending anonymous\r\n                        location data to Google, even when no apps are running.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button color=\"error\" onClick={handleClose}>Disagree</Button>\r\n                    <Button onClick={handleClose} autoFocus>\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AlertDialog;\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n} from '@mui/material';\r\nimport Slide from '@mui/material/Slide';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement;\r\n  },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst TransitionDialog = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"contained\" color=\"success\" fullWidth onClick={handleClickOpen}>\r\n        Open Transition Dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"error\" onClick={handleClose}>\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose}>Agree</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransitionDialog;\r\n","import React from 'react';\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Box } from '@mui/material';\r\n\r\nimport CustomTextField from \"../../forms/theme-elements/CustomTextField\";\r\n\r\nconst FormDialog = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"warning\" fullWidth onClick={handleClickOpen}>\r\n                Open Form Dialog\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Subscribe</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To subscribe to this website, please enter your email address here. We\r\n                        will send updates occasionally.\r\n                    </DialogContentText>\r\n                    <Box mt={2}>\r\n                        <CustomTextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Email Address\"\r\n                            type=\"email\"\r\n                            fullWidth\r\n                        />\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button color=\"error\" onClick={handleClose}>Cancel</Button>\r\n                    <Button onClick={handleClose}>Subscribe</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FormDialog;\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n} from '@mui/material';\r\nimport Slide from '@mui/material/Slide';\r\nimport { IconX } from '@tabler/icons';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement;\r\n  },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst FullscreenDialog = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"contained\" color=\"error\" fullWidth onClick={handleClickOpen}>\r\n        Open Fullscreen Dialog\r\n      </Button>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar sx={{ position: 'relative' }}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <IconX width={24} height={24} />\r\n            </IconButton>\r\n            <Typography ml={2} flex={1} variant=\"h6\" component=\"div\">\r\n              Sound\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              Save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button>\r\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FullscreenDialog;\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  FormControlLabel,\r\n} from '@mui/material';\r\n\r\nimport CustomSelect from '../../forms/theme-elements/CustomSelect';\r\nimport CustomSwitch from '../../forms/theme-elements/CustomSwitch';\r\nimport { DialogProps } from '@mui/material/Dialog';\r\n\r\nconst MaxWidthDialog = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState<DialogProps['maxWidth']>('sm');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMaxWidthChange = (event: any) => {\r\n    setMaxWidth(event.target.value);\r\n  };\r\n\r\n  const handleFullWidthChange = (event: any) => {\r\n    setFullWidth(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleClickOpen}>\r\n        Open Maxwidth Dialog\r\n      </Button>\r\n      <Dialog fullWidth={fullWidth} maxWidth={maxWidth} open={open} onClose={handleClose}>\r\n        <DialogTitle>Optional sizes</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You can set my maximum width and whether to adapt or not.\r\n          </DialogContentText>\r\n          <Box\r\n            noValidate\r\n            component=\"form\"\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              m: 'auto',\r\n              width: 'fit-content',\r\n            }}\r\n          >\r\n            <FormControl sx={{ mt: 2, minWidth: 120 }}>\r\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n              <CustomSelect\r\n                autoFocus\r\n                value={maxWidth}\r\n                onChange={handleMaxWidthChange}\r\n                label=\"maxWidth\"\r\n                inputProps={{\r\n                  name: 'max-width',\r\n                  id: 'max-width',\r\n                }}\r\n              >\r\n                <MenuItem>false</MenuItem>\r\n                <MenuItem value=\"xs\">xs</MenuItem>\r\n                <MenuItem value=\"sm\">sm</MenuItem>\r\n                <MenuItem value=\"md\">md</MenuItem>\r\n                <MenuItem value=\"lg\">lg</MenuItem>\r\n                <MenuItem value=\"xl\">xl</MenuItem>\r\n              </CustomSelect>\r\n            </FormControl>\r\n            <FormControlLabel\r\n              sx={{ mt: 1 }}\r\n              control={<CustomSwitch checked={fullWidth} onChange={handleFullWidthChange} />}\r\n              label=\"Full width\"\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"error\" variant=\"contained\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MaxWidthDialog;\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Stack,\r\n  DialogProps,\r\n} from '@mui/material';\r\n\r\nconst ScrollContentDialog = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState<DialogProps['scroll']>('paper');\r\n\r\n  const handleClickOpen = (scrollType: DialogProps['scroll']) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <>\r\n      <Stack spacing={2}>\r\n        <Button variant=\"contained\" color=\"success\" onClick={handleClickOpen('paper')}>\r\n          Scroll with Paper\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen('body')}>\r\n          Scroll with Body\r\n        </Button>\r\n      </Stack>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent dividers={scroll === 'paper'}>\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            ref={descriptionElementRef}\r\n            tabIndex={-1}\r\n          >\r\n            {[...new Array(50)]\r\n              .map(\r\n                () => `Cras mattis consectetur purus sit amet fermentum.\r\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\r\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\r\n              )\r\n              .join('\\n')}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"error\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose}>Subscribe</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScrollContentDialog;\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n} from '@mui/material';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nconst ResponsiveDialog = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"contained\" color=\"warning\" fullWidth onClick={handleClickOpen}>\r\n        Open Responsive Dialog\r\n      </Button>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose}>\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResponsiveDialog;\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material';\r\nimport Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';\r\nimport PageContainer from 'src/components/container/PageContainer';\r\nimport ParentCard from 'src/components/shared/ParentCard';\r\nimport ChildCard from 'src/components/shared/ChildCard';\r\nimport SimpleDialog from 'src/components/material-ui/dialog/SimpleDialog';\r\nimport AlertDialog from 'src/components/material-ui/dialog/AlertDialog';\r\nimport TransitionDialog from 'src/components/material-ui/dialog/TransitionDialog';\r\nimport FormDialog from 'src/components/material-ui/dialog/FormDialog';\r\nimport FullscreenDialog from 'src/components/material-ui/dialog/FullscreenDialog';\r\nimport MaxWidthDialog from 'src/components/material-ui/dialog/MaxWidthDialog';\r\nimport ScrollContentDialog from 'src/components/material-ui/dialog/ScrollContentDialog';\r\nimport ResponsiveDialog from 'src/components/material-ui/dialog/ResponsiveDialog';\r\n\r\nconst BCrumb = [\r\n  {\r\n    to: '/',\r\n    title: 'Home',\r\n  },\r\n  {\r\n    title: 'Dialog',\r\n  },\r\n];\r\n\r\nconst MuiDialog = () => (\r\n  <PageContainer title=\"Dialog\" description=\"this is Dialog page\">\r\n    {/* breadcrumb */}\r\n    <Breadcrumb title=\"Dialog\" items={BCrumb} />\r\n    {/* end breadcrumb */}\r\n\r\n    <ParentCard title=\"Dialog\">\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} lg={4} sm={6} display=\"flex\" alignItems=\"stretch\">\r\n          <ChildCard title=\"Simple\">\r\n            <SimpleDialog />\r\n          </ChildCard>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4} sm={6} display=\"flex\" alignItems=\"stretch\">\r\n          <ChildCard title=\"Alert\">\r\n            <AlertDialog />\r\n          </ChildCard>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4} sm={6} display=\"flex\" alignItems=\"stretch\">\r\n          <ChildCard title=\"Transition\">\r\n            <TransitionDialog />\r\n          </ChildCard>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4} sm={6} display=\"flex\" alignItems=\"stretch\">\r\n          <ChildCard title=\"Form\">\r\n            <FormDialog />\r\n          </ChildCard>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4} sm={6} display=\"flex\" alignItems=\"stretch\">\r\n          <ChildCard title=\"Full screen\">\r\n            <FullscreenDialog />\r\n          </ChildCard>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4} sm={6} display=\"flex\" alignItems=\"stretch\">\r\n          <ChildCard title=\"Max width\">\r\n            <MaxWidthDialog />\r\n          </ChildCard>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4} sm={6} display=\"flex\" alignItems=\"stretch\">\r\n          <ChildCard title=\"Scrolling Content\">\r\n            <ScrollContentDialog />\r\n          </ChildCard>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4} sm={6} display=\"flex\" alignItems=\"stretch\">\r\n          <ChildCard title=\"Responsive Fullscreen\">\r\n            <ResponsiveDialog />\r\n          </ChildCard>\r\n        </Grid>\r\n      </Grid>\r\n    </ParentCard>\r\n  </PageContainer>\r\n);\r\nexport default MuiDialog;\r\n"],"names":["title","description","children","name","content","CustomSelect","styled","props","CustomSwitch","width","height","top","left","backgroundColor","borderRadius","theme","palette","grey","opacity","CustomTextField","color","text","secondary","borderColor","sx","padding","divider","variant","footer","customizer","useSelector","state","useTheme","border","isCardShadow","elevation","undefined","p","subtitle","items","Grid","container","shape","marginBottom","position","overflow","item","xs","sm","lg","mb","Typography","fontWeight","mt","Breadcrumbs","separator","size","fill","fillOpacity","style","margin","alignItems","map","to","Link","underline","component","NavLink","display","Box","md","justifyContent","src","breadcrumbImg","alt","emails","React","open","setOpen","selectedValue","setSelectedValue","handleClose","value","Button","fullWidth","onClick","textAlign","Dialog","onClose","DialogTitle","List","pt","email","ListItem","button","ListItemAvatar","Avatar","bgcolor","ListItemText","primary","autoFocus","id","DialogContent","DialogContentText","DialogActions","Transition","ref","Slide","direction","TransitionComponent","keepMounted","label","type","fullScreen","AppBar","Toolbar","IconButton","edge","ml","flex","Divider","setFullWidth","maxWidth","setMaxWidth","noValidate","flexDirection","m","FormControl","minWidth","InputLabel","htmlFor","onChange","event","target","inputProps","MenuItem","FormControlLabel","control","checked","scroll","setScroll","handleClickOpen","scrollType","descriptionElementRef","descriptionElement","current","focus","Stack","spacing","dividers","tabIndex","Array","join","useMediaQuery","breakpoints","down","BCrumb","PageContainer","Breadcrumb","ParentCard","ChildCard"],"sourceRoot":""}
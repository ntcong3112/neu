{"version":3,"file":"static/js/4801.7cd8d3cb.chunk.js","mappings":"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","sources":["components/shared/BlankCard.tsx","components/apps/contacts/ContactDetails.tsx","components/apps/contacts/ContactListItem.tsx","components/apps/contacts/ContactList.tsx","components/apps/contacts/ContactSearch.tsx","components/apps/contacts/ContactAdd.tsx","components/apps/contacts/ContactFilter.tsx","views/apps/contacts/Contacts.tsx","../node_modules/@mui/material/esm/Card/cardClasses.js","../node_modules/@mui/material/esm/Card/Card.js","../node_modules/@mui/material/esm/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/esm/InputAdornment/InputAdornment.js","../node_modules/@mui/material/esm/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/esm/ListItemAvatar/ListItemAvatar.js"],"sourcesContent":["import { Card } from '@mui/material';\r\nimport React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { AppState, useSelector } from 'src/store/Store';\r\n\r\ntype Props = {\r\n  className?: string;\r\n  children: JSX.Element | JSX.Element[];\r\n  sx?: any;\r\n};\r\n\r\nconst BlankCard = ({ children, className, sx }: Props) => {\r\n  const customizer = useSelector((state: AppState) => state.customizer);\r\n\r\n  const theme = useTheme();\r\n  const borderColor = theme.palette.divider;\r\n\r\n  return (\r\n    <Card\r\n      sx={{ p: 0, border: !customizer.isCardShadow ? `1px solid ${borderColor}` : 'none' , position: 'relative', sx }}\r\n      className={className}\r\n      elevation={customizer.isCardShadow ? 9 : 0}\r\n      variant={!customizer.isCardShadow ? 'outlined' : undefined}\r\n    >\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BlankCard;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'src/store/Store';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Avatar,\r\n  Divider,\r\n  IconButton,\r\n  Stack,\r\n  Grid,\r\n  Tooltip,\r\n  useTheme\r\n} from '@mui/material';\r\nimport {\r\n  isEdit,\r\n  UpdateContact,\r\n  DeleteContact,\r\n  toggleStarredContact,\r\n} from 'src/store/apps/contacts/ContactSlice';\r\nimport BlankCard from '../../shared/BlankCard';\r\nimport { ContactType } from 'src/types/apps/contact';\r\nimport { IconPencil, IconStar, IconTrash, IconDeviceFloppy } from '@tabler/icons';\r\nimport Scrollbar from 'src/components/custom-scroll/Scrollbar';\r\nimport emailIcon from 'src/assets/images/breadcrumb/emailSv.png';\r\n\r\nconst ContactDetails = () => {\r\n  const contactDetail: ContactType = useSelector(\r\n    (state) => state.contactsReducer.contacts[state.contactsReducer.contactContent - 1],\r\n  );\r\n  const editContact = useSelector((state) => state.contactsReducer.editContact);\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n\r\n  const warningColor = theme.palette.warning.main;\r\n\r\n  const tableData = [\r\n    {\r\n      id: 1,\r\n      title: 'Firstname',\r\n      alias: 'firstname',\r\n      gdata: contactDetail ? contactDetail.firstname : '',\r\n      type: 'text',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Lastname',\r\n      alias: 'lastname',\r\n      gdata: contactDetail ? contactDetail.lastname : '',\r\n      type: 'text',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Company',\r\n      alias: 'company',\r\n      gdata: contactDetail ? contactDetail.company : '',\r\n      type: 'text',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Department',\r\n      alias: 'department',\r\n      gdata: contactDetail ? contactDetail.department : '',\r\n      type: 'text',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Email',\r\n      alias: 'email',\r\n      gdata: contactDetail ? contactDetail.email : '',\r\n      type: 'email',\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Phone',\r\n      alias: 'phone',\r\n      gdata: contactDetail ? contactDetail.phone : '',\r\n      type: 'phone',\r\n    },\r\n    {\r\n      id: 7,\r\n      title: 'Address',\r\n      alias: 'address',\r\n      gdata: contactDetail ? contactDetail.address : '',\r\n      type: 'text',\r\n    },\r\n    {\r\n      id: 8,\r\n      title: 'Notes',\r\n      alias: 'notes',\r\n      gdata: contactDetail ? contactDetail.notes : '',\r\n      type: 'text',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {/* ------------------------------------------- */}\r\n      {/* Contact Detail Part */}\r\n      {/* ------------------------------------------- */}\r\n      {contactDetail && !contactDetail.deleted ? (\r\n        <>\r\n          {/* ------------------------------------------- */}\r\n          {/* Header Part */}\r\n          {/* ------------------------------------------- */}\r\n          <Box p={3} py={2} display={'flex'} alignItems=\"center\">\r\n            <Typography variant=\"h5\">Contact Details</Typography>\r\n            <Stack gap={0} direction=\"row\" ml={'auto'}>\r\n              <Tooltip title={contactDetail.starred ? 'Unstar' : 'Star'}>\r\n                <IconButton onClick={() => dispatch(toggleStarredContact(contactDetail.id))}>\r\n                  <IconStar\r\n                    stroke={1.3}\r\n                    size=\"18\"\r\n                    style={{\r\n                      fill: contactDetail.starred ? warningColor : '',\r\n                      stroke: contactDetail.starred ? warningColor : '',\r\n                    }}\r\n                  />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip title={editContact ? 'Save' : 'Edit'}>\r\n                <IconButton onClick={() => dispatch(isEdit())}>\r\n                  {!editContact ? (\r\n                    <IconPencil size=\"18\" stroke={1.3} />\r\n                  ) : (\r\n                    <IconDeviceFloppy size=\"18\" stroke={1.3} />\r\n                  )}\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip title=\"Delete\">\r\n                <IconButton>\r\n                  <IconTrash size=\"18\" stroke={1.3} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Stack>\r\n          </Box>\r\n          <Divider />\r\n          {/* ------------------------------------------- */}\r\n          {/* Contact Table Part */}\r\n          {/* ------------------------------------------- */}\r\n          <Box sx={{ overflow: 'auto' }}>\r\n            {!editContact ? (\r\n              <Box>\r\n                <Box p={3}>\r\n                  <Box display=\"flex\" alignItems=\"center\">\r\n                    <Avatar\r\n                      alt={contactDetail.image}\r\n                      src={contactDetail.image}\r\n                      sx={{ width: '72px', height: '72px' }}\r\n                    />\r\n                    <Box sx={{ ml: 2 }}>\r\n                      <Typography variant=\"h6\" mb={0.5}>\r\n                        {contactDetail.firstname} {contactDetail.lastname}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\" mb={0.5}>\r\n                        {contactDetail.department}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {contactDetail.company}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                  <Grid container>\r\n                    <Grid item lg={6} xs={12} mt={4}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Phone Number\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle1\" mb={0.5} fontWeight={600}>\r\n                        {contactDetail.phone}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12} mt={4}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Email address\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle1\" fontWeight={600} mb={0.5}>\r\n                        {contactDetail.email}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item lg={12} xs={12} mt={4}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Address\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle1\" fontWeight={600} mb={0.5}>\r\n                        {contactDetail.address}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12} mt={4}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Department\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle1\" mb={0.5} fontWeight={600}>\r\n                        {contactDetail.department}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12} mt={4}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Company\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle1\" fontWeight={600} mb={0.5}>\r\n                        {contactDetail.company}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item lg={12} xs={12} mt={4}>\r\n                      <Typography variant=\"body2\" mb={1} color=\"text.secondary\">\r\n                        Notes\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle1\" mb={0.5}>\r\n                        {contactDetail.notes}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n                <Divider />\r\n                <Box p={3} gap={1} display=\"flex\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    onClick={() => dispatch(isEdit())}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  <Button\r\n                    color=\"error\"\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    onClick={() => dispatch(DeleteContact(contactDetail.id))}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            ) : (\r\n              <>\r\n                <BlankCard sx={{ p: 0 }}>\r\n                  <Scrollbar sx={{ height: { lg: 'calc(100vh - 360px)', md: '100vh' } }}>\r\n                    <Box pt={1}>\r\n                      {tableData.map((data) => (\r\n                        <Box key={data.id} px={3} py={1.5}>\r\n                          <Typography variant=\"subtitle1\" fontWeight={600} mb={0.5}>\r\n                            {data.title}\r\n                          </Typography>\r\n                          <TextField\r\n                            id=\"firstname\"\r\n                            size=\"small\"\r\n                            fullWidth\r\n                            type=\"text\"\r\n                            value={data.gdata}\r\n                            onChange={(e) =>\r\n                              dispatch(UpdateContact(contactDetail.id, data.alias, e.target.value))\r\n                            }\r\n                          />\r\n                        </Box>\r\n                      ))}\r\n                      <Box p={3}>\r\n                        <Button\r\n                          color=\"primary\"\r\n                          variant=\"contained\"\r\n                          onClick={() => dispatch(isEdit())}\r\n                        >\r\n                          Save Contact\r\n                        </Button>\r\n                      </Box>\r\n                    </Box>\r\n                  </Scrollbar>\r\n                </BlankCard>\r\n              </>\r\n            )}\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Box p={3} height=\"50vh\" display={'flex'} justifyContent=\"center\" alignItems={'center'}>\r\n          {/* ------------------------------------------- */}\r\n          {/* If no Contact  */}\r\n          {/* ------------------------------------------- */}\r\n          <Box>\r\n            <Typography variant=\"h4\">Please Select a Contact</Typography>\r\n            <br />\r\n            <img src={emailIcon} alt={emailIcon} width={'250px'} />\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactDetails;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\n\r\nimport { useSelector } from 'src/store/Store';\r\nimport {\r\n  ListItemText,\r\n  Box,\r\n  Avatar,\r\n  ListItemButton,\r\n  Typography,\r\n  Stack,\r\n  ListItemAvatar,\r\n  useTheme,\r\n} from '@mui/material';\r\n\r\nimport { IconStar, IconTrash } from '@tabler/icons';\r\n\r\ntype Props = {\r\n  onContactClick: (event: React.MouseEvent<HTMLElement>) => void;\r\n  onStarredClick: React.MouseEventHandler<SVGElement>;\r\n  onDeleteClick: React.MouseEventHandler<SVGElement>;\r\n  id: string | number;\r\n  firstname: string;\r\n  lastname: string;\r\n  image: string;\r\n  department: string;\r\n  starred: boolean;\r\n  active: any;\r\n};\r\n\r\nconst ContactListItem = ({\r\n  onContactClick,\r\n  onStarredClick,\r\n  onDeleteClick,\r\n  id,\r\n  firstname,\r\n  lastname,\r\n  image,\r\n  department,\r\n  starred,\r\n  active,\r\n}: Props) => {\r\n  const customizer = useSelector((state) => state.customizer);\r\n  const br = `${customizer.borderRadius}px`;\r\n\r\n  const theme = useTheme();\r\n\r\n  const warningColor = theme.palette.warning.main;\r\n\r\n  return (\r\n    <ListItemButton sx={{ mb: 1 }} selected={active}>\r\n      <ListItemAvatar>\r\n        <Avatar alt={image} src={image} />\r\n      </ListItemAvatar>\r\n      <ListItemText>\r\n        <Stack direction=\"row\" gap=\"10px\" alignItems=\"center\">\r\n          <Box mr=\"auto\" onClick={onContactClick}>\r\n            <Typography variant=\"subtitle1\" noWrap fontWeight={600} sx={{ maxWidth: '150px' }}>\r\n              {firstname} {lastname}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\r\n              {department}\r\n            </Typography>\r\n          </Box>\r\n          <IconStar\r\n            onClick={onStarredClick}\r\n            size=\"16\"\r\n            stroke={1.5}\r\n            style={{ fill: starred ? warningColor : '', stroke: starred ? warningColor : '' }}\r\n          />\r\n          <IconTrash onClick={onDeleteClick} size=\"16\" stroke={1.5} />\r\n        </Stack>\r\n      </ListItemText>\r\n    </ListItemButton>\r\n  );\r\n};\r\n\r\n\r\nexport default ContactListItem;\r\n","import React, { useEffect } from 'react';\r\nimport { List } from '@mui/material';\r\nimport { useSelector, useDispatch } from 'src/store/Store';\r\nimport {\r\n  SelectContact,\r\n  fetchContacts,\r\n  DeleteContact,\r\n  toggleStarredContact,\r\n} from '../../../store/apps/contacts/ContactSlice';\r\n\r\nimport Scrollbar from 'src/components/custom-scroll/Scrollbar';\r\nimport ContactListItem from './ContactListItem';\r\nimport type { ContactType } from 'src/types/apps/contact';\r\n\r\ntype Props = {\r\n  showrightSidebar: () => void;\r\n};\r\n\r\nconst ContactList = ({ showrightSidebar }: Props) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const getVisibleContacts = (contacts: ContactType[], filter: string, contactSearch: string) => {\r\n    switch (filter) {\r\n      case 'show_all':\r\n        return contacts.filter(\r\n          (c) => !c.deleted && c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      case 'frequent_contact':\r\n        return contacts.filter(\r\n          (c) =>\r\n            !c.deleted &&\r\n            c.frequentlycontacted &&\r\n            c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      case 'starred_contact':\r\n        return contacts.filter(\r\n          (c) => !c.deleted && c.starred && c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      case 'engineering_department':\r\n        return contacts.filter(\r\n          (c) =>\r\n            !c.deleted &&\r\n            c.department === 'Engineering' &&\r\n            c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      case 'support_department':\r\n        return contacts.filter(\r\n          (c) =>\r\n            !c.deleted &&\r\n            c.department === 'Support' &&\r\n            c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      case 'sales_department':\r\n        return contacts.filter(\r\n          (c) =>\r\n            !c.deleted &&\r\n            c.department === 'Sales' &&\r\n            c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      default:\r\n        throw new Error(`Unknown filter: ${filter}`);\r\n    }\r\n  };\r\n  const contacts = useSelector((state) =>\r\n    getVisibleContacts(\r\n      state.contactsReducer.contacts,\r\n      state.contactsReducer.currentFilter,\r\n      state.contactsReducer.contactSearch,\r\n    ),\r\n  );\r\n\r\n  const active = useSelector((state) => state.contactsReducer.contactContent);\r\n\r\n  return (\r\n    <List>\r\n      <Scrollbar sx={{ height: { lg: 'calc(100vh - 100px)', md: '100vh' }, maxHeight: '800px' }}>\r\n        {contacts.map((contact) => (\r\n          <ContactListItem\r\n            key={contact.id}\r\n            active={contact.id === active}\r\n            {...contact}\r\n            onContactClick={() => {\r\n              dispatch(SelectContact(contact.id));\r\n              showrightSidebar();\r\n            }}\r\n            onDeleteClick={() => dispatch(DeleteContact(contact.id))}\r\n            onStarredClick={() => dispatch(toggleStarredContact(contact.id))}\r\n          />\r\n        ))}\r\n      </Scrollbar>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch, AppState } from 'src/store/Store';\r\nimport { Box, Fab, TextField, InputAdornment } from '@mui/material';\r\n\r\nimport { SearchContact } from '../../../store/apps/contacts/ContactSlice';\r\nimport { IconMenu2, IconSearch } from '@tabler/icons';\r\n\r\ntype Props = {\r\n  onClick: (event: React.MouseEvent<HTMLElement>) => void;\r\n};\r\n\r\nconst ContactSearch = ({ onClick }: Props) => {\r\n  const searchTerm = useSelector((state: AppState) => state.contactsReducer.contactSearch);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Box display=\"flex\" sx={{ p: 2 }}>\r\n      <Fab\r\n        onClick={onClick}\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        sx={{ mr: 1, flexShrink: '0', display: { xs: 'block', lineHeight: '10px', lg: 'none' } }}\r\n      >\r\n        <IconMenu2 width=\"16\" />\r\n      </Fab>\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconSearch size={'16'} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        fullWidth\r\n        size=\"small\"\r\n        value={searchTerm}\r\n        placeholder=\"Search Contacts\"\r\n        variant=\"outlined\"\r\n        onChange={(e) => dispatch(SearchContact(e.target.value))}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContactSearch;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  TextField,\r\n  FormLabel,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Grid,\r\n} from '@mui/material';\r\nimport { useSelector, useDispatch } from 'src/store/Store';\r\nimport { addContact } from '../../../store/apps/contacts/ContactSlice';\r\nimport user1 from '../../../assets/images/profile/user-1.jpg';\r\n\r\nconst ContactAdd = () => {\r\n  const dispatch = useDispatch();\r\n  const id = useSelector((state) => state.contactsReducer.contacts.length + 1);\r\n  const [modal, setModal] = React.useState(false);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const [values, setValues] = React.useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    department: '',\r\n    company: '',\r\n    phone: '',\r\n    email: '',\r\n    address: '',\r\n    notes: '',\r\n  });\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      addContact(\r\n        id,\r\n        values.firstname,\r\n        values.lastname,\r\n        user1,\r\n        values.department,\r\n        values.company,\r\n        values.phone,\r\n        values.email,\r\n        values.address,\r\n        values.notes,\r\n      ),\r\n    );\r\n    setModal(!modal);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box p={3} pb={1}>\r\n        <Button color=\"primary\" variant=\"contained\" fullWidth onClick={toggle}>\r\n          Add New Contact\r\n        </Button>\r\n      </Box>\r\n      <Dialog\r\n        open={modal}\r\n        onClose={toggle}\r\n        maxWidth=\"sm\"\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" variant=\"h5\">\r\n          {'Add New Contact'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Lets add new contact for your application. fill the all field and\r\n            <br /> click on submit button.\r\n          </DialogContentText>\r\n          <Box mt={3}>\r\n            <form onSubmit={handleSubmit}>\r\n              <Grid spacing={3} container>\r\n                <Grid item xs={12} lg={6}>\r\n                  <FormLabel>FirstName</FormLabel>\r\n                  <TextField\r\n                    id=\"firstname\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={values.firstname}\r\n                    onChange={(e) => setValues({ ...values, firstname: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={6}>\r\n                  <FormLabel>LastName</FormLabel>\r\n                  <TextField\r\n                    id=\"lastname\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={values.lastname}\r\n                    onChange={(e) => setValues({ ...values, lastname: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={6}>\r\n                  <FormLabel>Department</FormLabel>\r\n                  <TextField\r\n                    id=\"department\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={values.department}\r\n                    onChange={(e) => setValues({ ...values, department: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={6}>\r\n                  <FormLabel>Company</FormLabel>\r\n                  <TextField\r\n                    id=\"company\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={values.company}\r\n                    onChange={(e) => setValues({ ...values, company: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={6}>\r\n                  <FormLabel>Phone</FormLabel>\r\n                  <TextField\r\n                    id=\"phone\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={values.phone}\r\n                    onChange={(e) => setValues({ ...values, phone: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={6}>\r\n                  <FormLabel>Email</FormLabel>\r\n                  <TextField\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    required\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={values.email}\r\n                    onChange={(e) => setValues({ ...values, email: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                  <FormLabel>Address</FormLabel>\r\n                  <TextField\r\n                    id=\"address\"\r\n                    size=\"small\"\r\n                    multiline\r\n                    rows=\"3\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={values.address}\r\n                    onChange={(e) => setValues({ ...values, address: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                  <FormLabel>Notes</FormLabel>\r\n                  <TextField\r\n                    id=\"notes\"\r\n                    size=\"small\"\r\n                    multiline\r\n                    rows=\"4\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={values.notes}\r\n                    onChange={(e) => setValues({ ...values, notes: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    sx={{ mr: 1 }}\r\n                    type=\"submit\"\r\n                    disabled={values.firstname.length === 0 || values.notes.length === 0}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                  <Button variant=\"contained\" color=\"error\" onClick={toggle}>\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactAdd;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'src/store/Store';\r\nimport {\r\n  ListItemText,\r\n  ListItemButton,\r\n  List,\r\n  Divider,\r\n  ListItemIcon,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { setVisibilityFilter } from '../../../store/apps/contacts/ContactSlice';\r\nimport Scrollbar from 'src/components/custom-scroll/Scrollbar';\r\nimport { IconMail, IconSend, IconBucket, IconFolder } from '@tabler/icons';\r\nimport ContactAdd from './ContactAdd';\r\n\r\ninterface DataType {\r\n  id: number;\r\n  name?: string;\r\n  sort?: string;\r\n  icon?: any;\r\n  filterbyTitle?: string;\r\n  devider?: boolean;\r\n  color?: string;\r\n}\r\n\r\nconst ContactFilter = () => {\r\n  const dispatch = useDispatch();\r\n  const active = useSelector((state) => state.contactsReducer.currentFilter);\r\n  const customizer = useSelector((state) => state.customizer);\r\n  const br = `${customizer.borderRadius}px`;\r\n\r\n  const filterData: DataType[] = [\r\n    {\r\n      id: 2,\r\n      name: 'All',\r\n      sort: 'show_all',\r\n      icon: IconMail,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Frequent',\r\n      sort: 'frequent_contact',\r\n      icon: IconSend,\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Starred',\r\n      sort: 'starred_contact',\r\n      icon: IconBucket,\r\n    },\r\n    {\r\n      id: 6,\r\n      devider: true,\r\n    },\r\n    {\r\n      id: 5,\r\n      filterbyTitle: 'Categories',\r\n    },\r\n\r\n    {\r\n      id: 7,\r\n      name: 'Engineering',\r\n      sort: 'engineering_department',\r\n      icon: IconFolder,\r\n      color: 'primary.main',\r\n    },\r\n    {\r\n      id: 8,\r\n      name: 'Support',\r\n      sort: 'support_department',\r\n      icon: IconFolder,\r\n      color: 'error.main',\r\n    },\r\n    {\r\n      id: 9,\r\n      name: 'Sales',\r\n      sort: 'sales_department',\r\n      icon: IconFolder,\r\n      color: 'success.main',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <ContactAdd />\r\n      <List>\r\n        <Scrollbar sx={{ height: { lg: 'calc(100vh - 100px)', md: '100vh' }, maxHeight: '800px' }}>\r\n          {filterData.map((filter) => {\r\n            if (filter.filterbyTitle) {\r\n              return (\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  fontWeight={600}\r\n                  pl={5.1}\r\n                  mt={1}\r\n                  pb={2}\r\n                  key={filter.id}\r\n                >\r\n                  {filter.filterbyTitle}\r\n                </Typography>\r\n              );\r\n            } else if (filter.devider) {\r\n              return <Divider key={filter.id} sx={{ mb: 3 }} />;\r\n            }\r\n\r\n            return (\r\n              <ListItemButton\r\n                sx={{ mb: 1, mx: 3, borderRadius: br }}\r\n                selected={active === `${filter.sort}`}\r\n                onClick={() => dispatch(setVisibilityFilter(`${filter.sort}`))}\r\n                key={filter.id}\r\n              >\r\n                <ListItemIcon sx={{ minWidth: '30px', color: filter.color }}>\r\n                  <filter.icon stroke=\"1.5\" size={19} />\r\n                </ListItemIcon>\r\n                <ListItemText>{filter.name}</ListItemText>\r\n              </ListItemButton>\r\n            );\r\n          })}\r\n        </Scrollbar>\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactFilter;\r\n","import React, { useState } from 'react';\r\nimport { Button, Box, Drawer, useMediaQuery, Theme } from '@mui/material';\r\nimport PageContainer from 'src/components/container/PageContainer';\r\nimport Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';\r\nimport ContactDetails from 'src/components/apps/contacts/ContactDetails';\r\nimport ContactList from 'src/components/apps/contacts/ContactList';\r\nimport ContactSearch from 'src/components/apps/contacts/ContactSearch';\r\nimport ContactFilter from 'src/components/apps/contacts/ContactFilter';\r\nimport AppCard from 'src/components/shared/AppCard';\r\n\r\nconst drawerWidth = 240;\r\nconst secdrawerWidth = 320;\r\n\r\nconst Contacts = () => {\r\n  const [isLeftSidebarOpen, setLeftSidebarOpen] = useState(false);\r\n  const [isRightSidebarOpen, setRightSidebarOpen] = useState(false);\r\n  const lgUp = useMediaQuery((theme: Theme) => theme.breakpoints.up('lg'));\r\n  const mdUp = useMediaQuery((theme: Theme) => theme.breakpoints.up('md'));\r\n\r\n  return (\r\n    <PageContainer title=\"Contact App\" description=\"this is Contact page\">\r\n      <Breadcrumb title=\"Contact app\" subtitle=\"List Your Contacts\" />\r\n      <AppCard>\r\n        {/* ------------------------------------------- */}\r\n        {/* Left Part */}\r\n        {/* ------------------------------------------- */}\r\n\r\n        <Drawer\r\n          open={isLeftSidebarOpen}\r\n          onClose={() => setLeftSidebarOpen(false)}\r\n          sx={{\r\n            width: drawerWidth,\r\n            [`& .MuiDrawer-paper`]: { width: drawerWidth, position: 'relative', zIndex: 2 },\r\n            flexShrink: 0,\r\n          }}\r\n          variant={lgUp ? 'permanent' : 'temporary'}\r\n        >\r\n          <ContactFilter />\r\n        </Drawer>\r\n        {/* ------------------------------------------- */}\r\n        {/* Middle part */}\r\n        {/* ------------------------------------------- */}\r\n        <Box\r\n          sx={{\r\n            minWidth: secdrawerWidth,\r\n            width: { xs: '100%', md: secdrawerWidth, lg: secdrawerWidth },\r\n            flexShrink: 0,\r\n          }}\r\n        >\r\n          <ContactSearch onClick={() => setLeftSidebarOpen(true)} />\r\n          <ContactList showrightSidebar={() => setRightSidebarOpen(true)} />\r\n        </Box>\r\n        {/* ------------------------------------------- */}\r\n        {/* Right part */}\r\n        {/* ------------------------------------------- */}\r\n        <Drawer\r\n          anchor=\"right\"\r\n          open={isRightSidebarOpen}\r\n          onClose={() => setRightSidebarOpen(false)}\r\n          variant={mdUp ? 'permanent' : 'temporary'}\r\n          sx={{\r\n            width: mdUp ? secdrawerWidth : '100%',\r\n            zIndex: lgUp ? 0 : 1,\r\n            flex: mdUp ? 'auto' : '',\r\n            [`& .MuiDrawer-paper`]: { width: '100%', position: 'relative' },\r\n          }}\r\n        >\r\n          {/* back btn Part */}\r\n          {mdUp ? (\r\n            ''\r\n          ) : (\r\n            <Box sx={{ p: 3 }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                onClick={() => setRightSidebarOpen(false)}\r\n                sx={{ mb: 3, display: { xs: 'block', md: 'none', lg: 'none' } }}\r\n              >\r\n                Back{' '}\r\n              </Button>\r\n            </Box>\r\n          )}\r\n          <ContactDetails />\r\n        </Drawer>\r\n      </AppCard>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  flexShrink: 0\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;"],"names":["children","className","sx","customizer","useSelector","state","borderColor","useTheme","palette","divider","p","border","isCardShadow","position","elevation","variant","undefined","contactDetail","contactsReducer","contacts","contactContent","editContact","dispatch","useDispatch","warningColor","warning","main","tableData","id","title","alias","gdata","firstname","type","lastname","company","department","email","phone","address","notes","deleted","Box","py","display","alignItems","Typography","Stack","gap","direction","ml","Tooltip","starred","IconButton","onClick","toggleStarredContact","stroke","size","style","fill","isEdit","Divider","overflow","BlankCard","Scrollbar","height","lg","md","pt","map","data","px","fontWeight","mb","TextField","fullWidth","value","onChange","e","UpdateContact","target","Button","color","Avatar","alt","image","src","width","Grid","container","item","xs","mt","DeleteContact","justifyContent","emailIcon","onContactClick","onStarredClick","onDeleteClick","active","borderRadius","ListItemButton","selected","ListItemAvatar","ListItemText","mr","noWrap","maxWidth","showrightSidebar","useEffect","fetchContacts","filter","contactSearch","c","toLocaleLowerCase","includes","frequentlycontacted","Error","getVisibleContacts","currentFilter","List","maxHeight","contact","SelectContact","searchTerm","Fab","flexShrink","lineHeight","InputProps","endAdornment","InputAdornment","placeholder","SearchContact","length","React","modal","setModal","toggle","values","setValues","pb","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","onSubmit","preventDefault","addContact","user1","spacing","FormLabel","required","multiline","rows","disabled","br","filterData","name","sort","icon","IconMail","IconSend","IconBucket","devider","filterbyTitle","IconFolder","pl","mx","setVisibilityFilter","ListItemIcon","minWidth","secdrawerWidth","useState","isLeftSidebarOpen","setLeftSidebarOpen","isRightSidebarOpen","setRightSidebarOpen","lgUp","useMediaQuery","theme","breakpoints","up","mdUp","PageContainer","description","Breadcrumb","subtitle","AppCard","Drawer","zIndex","anchor","flex","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","overridesResolver","props","styles","root","inProps","ref","useThemeProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","getInputAdornmentUtilityClass","_span","InputAdornmentRoot","capitalize","disablePointerEvents","whiteSpace","vars","action","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","component","disableTypography","variantProp","muiFormControl","useFormControl","hiddenLabel","slots","FormControlContext","as","_jsxs","getListItemAvatarUtilityClass","ListItemAvatarRoot","alignItemsFlexStart","context","ListContext"],"sourceRoot":""}
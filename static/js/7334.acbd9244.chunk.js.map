{"version":3,"file":"static/js/7334.acbd9244.chunk.js","mappings":"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","sources":["components/container/PageContainer.tsx","components/forms/theme-elements/CustomCheckbox.tsx","components/forms/theme-elements/CustomFormLabel.tsx","components/forms/theme-elements/CustomSelect.tsx","components/forms/theme-elements/CustomTextField.tsx","components/shared/BlankCard.tsx","components/shared/ChildCard.tsx","layouts/full/shared/breadcrumb/Breadcrumb.tsx","components/forms/form-validation/FVLogin.tsx","components/forms/form-validation/FVRegister.tsx","components/forms/form-validation/FVOnLeave.tsx","components/forms/form-validation/FVRadio.tsx","components/forms/form-validation/FVCheckbox.tsx","components/forms/form-validation/FVSelect.tsx","views/forms/FormValidation.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport { Helmet } from 'react-helmet';\r\n\r\ntype Props = {\r\n  description?: string;\r\n  children: JSX.Element | JSX.Element[];\r\n  title?: string;\r\n};\r\n\r\nconst PageContainer = ({ title, description, children }: Props) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default PageContainer;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material';\r\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox';\r\n\r\nconst BpIcon = styled('span')(({ theme }) => ({\r\n  borderRadius: 3,\r\n  width: 19,\r\n  height: 19,\r\n  marginLeft: '4px',\r\n  boxShadow:\r\n    theme.palette.mode === 'dark'\r\n      ? `0 0 0 1px ${theme.palette.grey[200]}`\r\n      : `inset 0 0 0 1px ${theme.palette.grey[300]}`,\r\n  backgroundColor: 'transparent',\r\n\r\n  '.Mui-focusVisible &': {\r\n    outline:\r\n      theme.palette.mode === 'dark'\r\n        ? `0px auto ${theme.palette.grey[200]}`\r\n        : `0px auto  ${theme.palette.grey[300]}`,\r\n    outlineOffset: 2,\r\n  },\r\n  'input:hover ~ &': {\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.primary : theme.palette.primary,\r\n  },\r\n  'input:disabled ~ &': {\r\n    boxShadow: 'none',\r\n    background: theme.palette.grey[100],\r\n  },\r\n}));\r\n\r\nconst BpCheckedIcon = styled(BpIcon)({\r\n  boxShadow: 'none',\r\n  width: 19,\r\n  height: 19,\r\n  '&:before': {\r\n    display: 'block',\r\n    width: 19,\r\n    height: 19,\r\n    backgroundImage:\r\n      \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\r\n      \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\r\n      \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\r\n    content: '\"\"',\r\n  },\r\n});\r\n\r\n// Inspired by blueprintjs\r\nfunction CustomCheckbox(props: CheckboxProps) {\r\n  return (\r\n    <Checkbox\r\n      disableRipple\r\n      color={props.color ? props.color : 'default'}\r\n      checkedIcon={\r\n        <BpCheckedIcon\r\n          sx={{\r\n            backgroundColor: props.color ? `${props.color}.main` : 'primary.main',\r\n          }}\r\n        />\r\n      }\r\n      icon={<BpIcon />}\r\n      inputProps={{ 'aria-label': 'Checkbox demo' }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CustomCheckbox;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Typography } from '@mui/material';\r\n\r\nconst CustomFormLabel = styled((props: any) => (\r\n  <Typography\r\n    variant=\"subtitle1\"\r\n    fontWeight={600}\r\n    {...props}\r\n    component=\"label\"\r\n    htmlFor={props.htmlFor}\r\n  />\r\n))(() => ({\r\n  marginBottom: '5px',\r\n  marginTop: '25px',\r\n  display: 'block',\r\n}));\r\n\r\nexport default CustomFormLabel;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Select } from '@mui/material';\r\n\r\nconst CustomSelect = styled((props: any) => <Select {...props} />)(({}) => ({}));\r\n\r\nexport default CustomSelect;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst CustomTextField = styled((props: any) => <TextField {...props} />)(({ theme }) => ({\r\n  '& .MuiOutlinedInput-input::-webkit-input-placeholder': {\r\n    color: theme.palette.text.secondary,\r\n    opacity: '0.8',\r\n  },\r\n  '& .MuiOutlinedInput-input.Mui-disabled::-webkit-input-placeholder': {\r\n    color: theme.palette.text.secondary,\r\n    opacity: '1',\r\n  },\r\n  '& .Mui-disabled .MuiOutlinedInput-notchedOutline': {\r\n    borderColor: theme.palette.grey[200],\r\n  },\r\n}));\r\n\r\nexport default CustomTextField;\r\n","import { Card } from '@mui/material';\r\nimport React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { AppState, useSelector } from 'src/store/Store';\r\n\r\ntype Props = {\r\n  className?: string;\r\n  children: JSX.Element | JSX.Element[];\r\n  sx?: any;\r\n};\r\n\r\nconst BlankCard = ({ children, className, sx }: Props) => {\r\n  const customizer = useSelector((state: AppState) => state.customizer);\r\n\r\n  const theme = useTheme();\r\n  const borderColor = theme.palette.divider;\r\n\r\n  return (\r\n    <Card\r\n      sx={{ p: 0, border: !customizer.isCardShadow ? `1px solid ${borderColor}` : 'none' , position: 'relative', sx }}\r\n      className={className}\r\n      elevation={customizer.isCardShadow ? 9 : 0}\r\n      variant={!customizer.isCardShadow ? 'outlined' : undefined}\r\n    >\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BlankCard;\r\n","import React from 'react';\r\n\r\nimport { Card, CardHeader, CardContent, Divider } from '@mui/material';\r\n\r\ntype Props = {\r\n  title?: string;\r\n  children: JSX.Element | JSX.Element[];\r\n};\r\n\r\nconst ChildCard = ({ title, children }: Props) => (\r\n  <Card sx={{ padding: 0, borderColor: (theme: any) => theme.palette.divider }} variant=\"outlined\">\r\n    {title ? (\r\n      <>\r\n        <CardHeader title={title} />\r\n        <Divider />{' '}\r\n      </>\r\n    ) : (\r\n      ''\r\n    )}\r\n\r\n    <CardContent>{children}</CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default ChildCard;\r\n","import React from 'react';\r\nimport { Grid, Typography, Box, Breadcrumbs, Link, Theme } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport breadcrumbImg from 'src/assets/images/breadcrumb/ChatBc.png';\r\nimport { IconCircle } from '@tabler/icons';\r\n\r\ninterface BreadCrumbType {\r\n  subtitle?: string;\r\n  items?: any[];\r\n  title: string;\r\n  children?: JSX.Element;\r\n}\r\n\r\nconst Breadcrumb = ({ subtitle, items, title, children }: BreadCrumbType) => (\r\n  <Grid\r\n    container\r\n    sx={{\r\n      backgroundColor: 'primary.light',\r\n      borderRadius: (theme: Theme) => theme.shape.borderRadius / 4,\r\n      p: '30px 25px 20px',\r\n      marginBottom: '30px',\r\n      position: 'relative',\r\n      overflow: 'hidden',\r\n    }}\r\n  >\r\n    <Grid item xs={12} sm={6} lg={8} mb={1}>\r\n      <Typography variant=\"h4\">{title}</Typography>\r\n      <Typography color=\"textSecondary\" variant=\"h6\" fontWeight={400} mt={0.8} mb={0}>\r\n        {subtitle}\r\n      </Typography>\r\n      <Breadcrumbs\r\n        separator={\r\n          <IconCircle\r\n            size=\"5\"\r\n            fill=\"textSecondary\"\r\n            fillOpacity={'0.6'}\r\n            style={{ margin: '0 5px' }}\r\n          />\r\n        }\r\n        sx={{ alignItems: 'center', mt: items ? '10px' : '' }}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        {items\r\n          ? items.map((item) => (\r\n              <div key={item.title}>\r\n                {item.to ? (\r\n                  <Link underline=\"none\" color=\"inherit\" component={NavLink} to={item.to}>\r\n                    {item.title}\r\n                  </Link>\r\n                ) : (\r\n                  <Typography color=\"textPrimary\">{item.title}</Typography>\r\n                )}\r\n              </div>\r\n            ))\r\n          : ''}\r\n      </Breadcrumbs>\r\n    </Grid>\r\n    <Grid item xs={12} sm={6} lg={4} display=\"flex\" alignItems=\"flex-end\">\r\n      <Box\r\n        sx={{\r\n          display: { xs: 'none', md: 'block', lg: 'flex' },\r\n          alignItems: 'center',\r\n          justifyContent: 'flex-end',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {children ? (\r\n          <Box sx={{ top: '0px', position: 'absolute' }}>{children}</Box>\r\n        ) : (\r\n          <>\r\n            <Box sx={{ top: '0px', position: 'absolute' }}>\r\n              <img src={breadcrumbImg} alt={breadcrumbImg} width={'165px'} />\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default Breadcrumb;\r\n","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Box, Button, Stack, FormGroup, FormControlLabel, Typography } from '@mui/material';\r\n\r\nimport CustomTextField from '../theme-elements/CustomTextField';\r\nimport CustomFormLabel from '../theme-elements/CustomFormLabel';\r\nimport CustomCheckbox from '../theme-elements/CustomCheckbox';\r\n\r\nconst validationSchema = yup.object({\r\n  firstName: yup\r\n    .string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Firstname is Required'),\r\n  lastName: yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Lastname is Required'),\r\n  email: yup.string().email('Enter a valid email').required('Email is required'),\r\n  password: yup\r\n    .string()\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required'),\r\n  changepassword: yup.string().when('password', {\r\n    is: (val: string) => (val && val.length > 0 ? true : false),\r\n    then: yup.string().oneOf([yup.ref('password')], 'Both password need to be the same'),\r\n  }),\r\n});\r\n\r\nconst FVRegister = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: '',\r\n      email: '',\r\n      password: '',\r\n      changepassword: '',\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <Stack>\r\n        <Box>\r\n          <CustomFormLabel>Email Address</CustomFormLabel>\r\n          <CustomTextField\r\n            fullWidth\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n        </Box>\r\n        <Box mb={3}>\r\n          <CustomFormLabel>Password</CustomFormLabel>\r\n          <CustomTextField\r\n            fullWidth\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          />\r\n        </Box>\r\n      </Stack>\r\n      <Stack justifyContent=\"space-between\" direction=\"row\" alignItems=\"center\" mb={2}>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={<CustomCheckbox defaultChecked />}\r\n            label=\"Remeber this Device\"\r\n          />\r\n        </FormGroup>\r\n        <Typography\r\n          component={Link}\r\n          to=\"/auth/forgot-password\"\r\n          fontWeight={600}\r\n          sx={{\r\n            textDecoration: 'none',\r\n            color: 'primary.main',\r\n          }}\r\n        >\r\n          Forgot Password ?\r\n        </Typography>\r\n      </Stack>\r\n      <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n        Sign In\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FVRegister;\r\n","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Box, Button, Stack, FormGroup, FormControlLabel, Typography } from '@mui/material';\r\n\r\nimport CustomTextField from '../theme-elements/CustomTextField';\r\nimport CustomFormLabel from '../theme-elements/CustomFormLabel';\r\nimport CustomCheckbox from '../theme-elements/CustomCheckbox';\r\n\r\nconst validationSchema = yup.object({\r\n  firstName: yup\r\n    .string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Firstname is Required'),\r\n  lastName: yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Lastname is Required'),\r\n  email: yup.string().email('Enter a valid email').required('Email is required'),\r\n  password: yup\r\n    .string()\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required'),\r\n  changepassword: yup.string().when('password', {\r\n    is: (val: string) => (val && val.length > 0 ? true : false),\r\n    then: yup.string().oneOf([yup.ref('password')], 'Both password need to be the same'),\r\n  }),\r\n});\r\n\r\nconst FVRegister = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: '',\r\n      email: '',\r\n      password: '',\r\n      changepassword: '',\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n  \r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <Stack>\r\n        <Box>\r\n          <CustomFormLabel>Name</CustomFormLabel>\r\n          <CustomTextField\r\n            fullWidth\r\n            id=\"firstName\"\r\n            name=\"firstName\"\r\n            value={formik.values.firstName}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.firstName && Boolean(formik.errors.firstName)}\r\n            helperText={formik.touched.firstName && formik.errors.firstName}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <CustomFormLabel>Email</CustomFormLabel>\r\n          <CustomTextField\r\n            fullWidth\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <CustomFormLabel>Password</CustomFormLabel>\r\n          <CustomTextField\r\n            fullWidth\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          />\r\n        </Box>\r\n        <Box mb={3}>\r\n          <CustomFormLabel>Confirm Password</CustomFormLabel>\r\n          <CustomTextField\r\n            fullWidth\r\n            id=\"changepassword\"\r\n            name=\"changepassword\"\r\n            type=\"password\"\r\n            value={formik.values.changepassword}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.changepassword && Boolean(formik.errors.changepassword)}\r\n            helperText={formik.touched.changepassword && formik.errors.changepassword}\r\n          />\r\n        </Box>\r\n      </Stack>\r\n      <Stack justifyContent=\"space-between\" direction=\"row\" alignItems=\"center\" mb={2}>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={<CustomCheckbox defaultChecked />}\r\n            label=\"Remeber this Device\"\r\n          />\r\n        </FormGroup>\r\n        <Typography\r\n          component={Link}\r\n          to=\"/auth/forgot-password\"\r\n          fontWeight={600}\r\n          sx={{\r\n            textDecoration: 'none',\r\n            color: 'primary.main',\r\n          }}\r\n        >\r\n          Forgot Password ?\r\n        </Typography>\r\n      </Stack>\r\n      <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n        Sign Up\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FVRegister;\r\n","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport { Box, Button, Stack } from '@mui/material';\r\n\r\nimport CustomTextField from '../theme-elements/CustomTextField';\r\nimport CustomFormLabel from '../theme-elements/CustomFormLabel';\r\n\r\nconst validationSchema = yup.object({\r\n  emailInstant: yup.string().email('Enter a valid email').required('Email is required'),\r\n  passwordInstant: yup\r\n    .string()\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required'),\r\n});\r\n\r\nconst FVOnLeave = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      emailInstant: '',\r\n      passwordInstant: '',\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(values.emailInstant);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <Stack>\r\n        <Box mt=\"-10px\">\r\n          <CustomFormLabel>Email Address</CustomFormLabel>\r\n          <CustomTextField\r\n            fullWidth\r\n            id=\"emailInstant\"\r\n            name=\"emailInstant\"\r\n            value={formik.values.emailInstant}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.touched.emailInstant && Boolean(formik.errors.emailInstant)}\r\n            helperText={formik.touched.emailInstant && formik.errors.emailInstant}\r\n          />\r\n        </Box>\r\n        <Box mb={3}>\r\n          <CustomFormLabel>Password</CustomFormLabel>\r\n          <CustomTextField\r\n            fullWidth\r\n            id=\"passwordInstant\"\r\n            name=\"passwordInstant\"\r\n            type=\"password\"\r\n            value={formik.values.passwordInstant}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.touched.passwordInstant && Boolean(formik.errors.passwordInstant)}\r\n            helperText={formik.touched.passwordInstant && formik.errors.passwordInstant}\r\n          />\r\n        </Box>\r\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n          <Button variant=\"contained\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FVOnLeave;\r\n","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Stack,\r\n  FormControlLabel,\r\n  FormControl,\r\n  RadioGroup,\r\n  Radio,\r\n  FormHelperText,\r\n} from '@mui/material';\r\n\r\nconst validationSchema = yup.object({\r\n  color: yup.string().required('Color selection is required'),\r\n});\r\n\r\nconst FVRadio = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      color: '',\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(values.color);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <Stack>\r\n        <Box mt=\"-10px\" mb={3}>\r\n          <FormControl>\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"color\"\r\n              value={formik.values.color}\r\n              onChange={formik.handleChange}\r\n              name=\"color\"\r\n              id=\"color\"\r\n            >\r\n              <FormControlLabel\r\n                value=\"primary\"\r\n                control={\r\n                  <Radio\r\n                    sx={{\r\n                      color: 'primary.main',\r\n                      '&.Mui-checked': { color: 'primary.main' },\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"Primary\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"error\"\r\n                control={\r\n                  <Radio\r\n                    sx={{\r\n                      color: 'error.main',\r\n                      '&.Mui-checked': { color: 'error.main' },\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"Error\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"secondary\"\r\n                control={\r\n                  <Radio\r\n                    sx={{\r\n                      color: 'secondary.main',\r\n                      '&.Mui-checked': { color: 'secondary.main' },\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"Secondary\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {formik.errors.color && (\r\n            <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n              {' '}\r\n              {formik.errors.color}{' '}\r\n            </FormHelperText>\r\n          )}\r\n        </Box>\r\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n          <Button variant=\"contained\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FVRadio;\r\n","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Box, Button, Stack, FormHelperText } from '@mui/material';\r\nimport CustomCheckbox from '../theme-elements/CustomCheckbox';\r\n\r\nconst validationSchema = yup.object({\r\n  color: yup.array().min(1, 'At least one color is required'),\r\n});\r\n\r\nconst FVCheckbox = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      color: [],\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(values.color);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <Stack>\r\n        <Box mt=\"-10px\" mb={3}>\r\n          <CustomCheckbox\r\n            color=\"primary\"\r\n            value=\"primary\"\r\n            name=\"color\"\r\n            onChange={formik.handleChange}\r\n          />\r\n          <CustomCheckbox\r\n            value=\"secondary\"\r\n            name=\"color\"\r\n            color=\"secondary\"\r\n            onChange={formik.handleChange}\r\n          />\r\n          <CustomCheckbox value=\"error\" name=\"color\" color=\"error\" onChange={formik.handleChange} />\r\n          {formik.errors.color && (\r\n            <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n              {' '}\r\n              {formik.errors.color}{' '}\r\n            </FormHelperText>\r\n          )}\r\n        </Box>\r\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n          <Button variant=\"contained\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FVCheckbox;\r\n","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport { Box, Button, Stack, FormHelperText, MenuItem } from '@mui/material';\r\n\r\nimport CustomFormLabel from '../theme-elements/CustomFormLabel';\r\nimport CustomSelect from '../theme-elements/CustomSelect';\r\n\r\nconst validationSchema = yup.object({\r\n  age: yup.number().required('Age selection is required.'),\r\n});\r\n\r\nconst FVSelect = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      age: '',\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(values.age);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <Stack>\r\n        <Box mt=\"-10px\" mb={3}>\r\n          <CustomFormLabel>Age</CustomFormLabel>\r\n          <CustomSelect\r\n            labelId=\"age-select\"\r\n            id=\"age\"\r\n            fullWidth\r\n            name=\"age\"\r\n            value={formik.values.age}\r\n            onChange={formik.handleChange}\r\n          >\r\n            <MenuItem value=\"\">\r\n              <em>None</em>\r\n            </MenuItem>\r\n            <MenuItem value={10}>Ten</MenuItem>\r\n            <MenuItem value={20}>Twenty</MenuItem>\r\n            <MenuItem value={30}>Thirty</MenuItem>\r\n          </CustomSelect>\r\n          {formik.errors.age && (\r\n            <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n              {' '}\r\n              {formik.errors.age}{' '}\r\n            </FormHelperText>\r\n          )}\r\n        </Box>\r\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n          <Button variant=\"contained\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FVSelect;\r\n","import React from 'react';\r\nimport {\r\n    CardContent,\r\n    Grid\r\n} from '@mui/material';\r\n\r\n// common components\r\nimport PageContainer from 'src/components/container/PageContainer';\r\nimport Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';\r\nimport ChildCard from 'src/components/shared/ChildCard';\r\nimport BlankCard from 'src/components/shared/BlankCard';\r\nimport Logo from \"src/layouts/full/shared/logo/Logo\";\r\n\r\n// custom components\r\nimport FVLogin from 'src/components/forms/form-validation/FVLogin';\r\nimport FVRegister from 'src/components/forms/form-validation/FVRegister';\r\nimport FVOnLeave from 'src/components/forms/form-validation/FVOnLeave';\r\nimport FVRadio from 'src/components/forms/form-validation/FVRadio';\r\nimport FVCheckbox from 'src/components/forms/form-validation/FVCheckbox';\r\nimport FVSelect from 'src/components/forms/form-validation/FVSelect';\r\n\r\nconst BCrumb = [\r\n    {\r\n        to: '/',\r\n        title: 'Home',\r\n    },\r\n    {\r\n        title: 'Form Validation',\r\n    },\r\n];\r\n\r\nconst FormValidation = () => {\r\n    return (\r\n        <PageContainer title=\"Form Validation\" description=\"this is Form Validation page\">\r\n            <Breadcrumb title=\"Form Validation\" items={BCrumb} />\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                    {/* <BlankCard title=\"Register\"> */}\r\n                    <BlankCard>\r\n                        <CardContent sx={{ pt: 0 }}>\r\n                            <Logo />\r\n                            <FVRegister />\r\n                        </CardContent>\r\n                    </BlankCard>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    {/* <BlankCard title=\"Login\"> */}\r\n                    <BlankCard>\r\n                        <CardContent sx={{ pt: 0 }}>\r\n                            <Logo />\r\n                            <FVLogin />\r\n                        </CardContent>\r\n                    </BlankCard>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <ChildCard title=\"On Leave\">\r\n\r\n                        <FVOnLeave />\r\n                    </ChildCard>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <ChildCard title=\"Select\">\r\n                        <FVSelect />\r\n                    </ChildCard>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <ChildCard title=\"Radio\">\r\n                        <FVRadio />\r\n                    </ChildCard>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <ChildCard title=\"Checkboxes\">\r\n                        <FVCheckbox />\r\n                    </ChildCard>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </PageContainer>\r\n    );\r\n};\r\n\r\nexport default FormValidation;\r\n"],"names":["title","description","children","name","content","BpIcon","styled","theme","borderRadius","width","height","marginLeft","boxShadow","palette","mode","grey","backgroundColor","outline","outlineOffset","primary","background","BpCheckedIcon","display","backgroundImage","props","disableRipple","color","checkedIcon","sx","icon","inputProps","CustomFormLabel","variant","fontWeight","component","htmlFor","marginBottom","marginTop","CustomSelect","CustomTextField","text","secondary","opacity","borderColor","className","customizer","useSelector","state","useTheme","divider","p","border","isCardShadow","position","elevation","undefined","padding","subtitle","items","Grid","container","shape","overflow","item","xs","sm","lg","mb","Typography","mt","Breadcrumbs","separator","size","fill","fillOpacity","style","margin","alignItems","map","to","Link","underline","NavLink","Box","md","justifyContent","top","src","breadcrumbImg","alt","validationSchema","yup","firstName","min","max","required","lastName","email","password","changepassword","when","is","val","length","then","oneOf","formik","useFormik","initialValues","onSubmit","values","alert","JSON","stringify","handleSubmit","Stack","fullWidth","id","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","direction","FormGroup","FormControlLabel","control","CustomCheckbox","defaultChecked","label","textDecoration","Button","emailInstant","passwordInstant","onBlur","handleBlur","FormControl","RadioGroup","row","Radio","FormHelperText","age","labelId","MenuItem","BCrumb","PageContainer","Breadcrumb","spacing","BlankCard","CardContent","pt","Logo","FVLogin","ChildCard"],"sourceRoot":""}